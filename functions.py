import openpyxl as oxl
from openpyxl.utils import column_index_from_string as col_index
from os import path
import datetime


date = datetime.datetime.now()


# Функция для конвертации mac-адресов
def convert(stri):
    stri = list(stri)
    str_output = []
    for el in stri:
        if el.isdecimal():
            str_output.append(el)
        elif el.isalpha():
            str_output.append(el.lower())
    str_output = ''.join(str_output)
    n = 2
    str_output = [str_output[i:i + n] for i in range(0, len(str_output), n)]
    str_output = (':'.join(str_output))
    return str_output


def translit(string):
    capital_letters = {u'А': u'A',
                       u'Б': u'B',
                       u'В': u'V',
                       u'Г': u'G',
                       u'Д': u'D',
                       u'Е': u'E',
                       u'Ё': u'E',
                       u'Ж': u'Zh',
                       u'З': u'Z',
                       u'И': u'I',
                       u'Й': u'Y',
                       u'К': u'K',
                       u'Л': u'L',
                       u'М': u'M',
                       u'Н': u'N',
                       u'О': u'O',
                       u'П': u'P',
                       u'Р': u'R',
                       u'С': u'S',
                       u'Т': u'T',
                       u'У': u'U',
                       u'Ф': u'F',
                       u'Х': u'H',
                       u'Ц': u'C',
                       u'Ч': u'Ch',
                       u'Ш': u'Sh',
                       u'Щ': u'Sh',
                       u'Ъ': u'',
                       u'Ы': u'Y',
                       u'Ь': u'',
                       u'Э': u'E',
                       u'Ю': u'U',
                       u'Я': u'Ya', }

    lower_case_letters = {u'а': u'a',
                          u'б': u'b',
                          u'в': u'v',
                          u'г': u'g',
                          u'д': u'd',
                          u'е': u'e',
                          u'ё': u'e',
                          u'ж': u'zh',
                          u'з': u'z',
                          u'и': u'i',
                          u'й': u'y',
                          u'к': u'k',
                          u'л': u'l',
                          u'м': u'm',
                          u'н': u'n',
                          u'о': u'o',
                          u'п': u'p',
                          u'р': u'r',
                          u'с': u's',
                          u'т': u't',
                          u'у': u'u',
                          u'ф': u'f',
                          u'х': u'h',
                          u'ц': u'c',
                          u'ч': u'ch',
                          u'ш': u'sh',
                          u'щ': u'sh',
                          u'ъ': u'',
                          u'ы': u'y',
                          u'ь': u'',
                          u'э': u'e',
                          u'ю': u'u',
                          u'я': u'ya', }
    translit_string = ""
    for index, char in enumerate(string):
        if char in lower_case_letters.keys():
            char = lower_case_letters[char]
        elif char in capital_letters.keys():
            char = capital_letters[char]
            if len(string) > index + 1:
                if string[index + 1] not in lower_case_letters.keys():
                    char = char.upper()
            else:
                char = char.upper()
        translit_string += char
    return translit_string


def autofill(text):
    dictmrf = {'Алтайский край': ['Барнаул', '22', 'Сибирь'],
               'Амурская область': ['Благовещенск', '28', 'ДВ'],
               'Архангельская область': ['Архангельск', '29', 'СЗ'],
               'Астраханская область': ['Астрахань', '30', 'Юг'],
               'Белгородская область': ['Белгород', '31', 'Центр'],
               'Брянская область': ['Брянск', '32', 'Центр'],
               'Владимирская область': ['Владимир', '33', 'Центр'],
               'Волгоградская область': ['Волгоград', '34', 'Юг'],
               'Вологодская область': ['Вологда', '35', 'СЗ'],
               'Воронежская область': ['Воронеж', '36', 'Центр'],
               'Город Москва': ['Москва', '77', 'Центр'],
               'Город Санкт-Петербург': ['Санкт-Петербург', '78', 'СЗ'],
               'Еврейская автономная область': ['Биробиджан', '79', 'ДВ'],
               'Забайкальский край': ['Чита', '75', 'Сибирь'],
               'Ивановская область': ['Иваново', '37', 'Центр'],
               'Иркутская область': ['Иркутск', '38', 'Сибирь'],
               'Кабардино-Балкарская Республика': ['Нальчик', '7', 'Юг'],
               'Калининградская область': ['Калининград', '39', 'СЗ'],
               'Калужская область': ['Калуга', '40', 'Центр'],
               'Камчатский край': ['Петропавловск-Камчатский', '41', 'ДВ'],
               'Карачаево-Черкесская Республика': ['Черкесск', '9', 'Юг'],
               'Кемеровская область': ['Кемерово', '42', 'Сибирь'],
               'Кировская область': ['Киров', '43', 'Волга'],
               'Костромская область': ['Кострома', '44', 'Центр'],
               'Краснодарский край': ['Краснодар', '23', 'Юг'],
               'Красноярский край': ['Красноярск', '24', 'Сибирь'],
               'Курганская область': ['Курган', '45', 'Урал'],
               'Курская область': ['Курск', '46', 'Центр'],
               'Ленинградская область': ['Санкт-Петербург', '47', 'СЗ'],
               'Липецкая область': ['Липецк', '48', 'Центр'],
               'Магаданская область': ['Магадан', '49', 'ДВ'],
               'Московская область': ['Красногорск, Москва', '50', 'Центр'],
               'Мурманская область': ['Мурманск', '51', 'СЗ'],
               'Ненецкий автономный округ': ['Нарьян-Мар', '83', 'СЗ'],
               'Нижегородская область': ['Нижний Новгород', '52', 'Волга'],
               'Новгородская область': ['Великий Новгород', '53', 'СЗ'],
               'Новосибирская область': ['Новосибирск', '54', 'Сибирь'],
               'Омская область': ['Омск', '55', 'Сибирь'],
               'Оренбургская область': ['Оренбург', '56', 'Волга'],
               'Орловская область': ['Орёл', '57', 'Центр'],
               'Пензенская область': ['Пенза', '58', 'Волга'],
               'Пермский край': ['Пермь', '59', 'Урал'],
               'Приморский край': ['Владивосток', '25', 'ДВ'],
               'Псковская область': ['Псков', '60', 'СЗ'],
               'Республика Адыгея': ['Майкоп', '1', 'Юг'],
               'Республика Алтай': ['Горно-Алтайск', '4', 'Сибирь'],
               'Республика Башкортостан': ['Уфа', '2', 'Волга'],
               'Республика Бурятия': ['Улан-Удэ', '3', 'Сибирь'],
               'Республика Дагестан': ['Махачкала', '5', 'Юг'],
               'Республика Ингушетия': ['Магас', '6', 'Юг'],
               'Республика Калмыкия': ['Элиста', '8', 'Юг'],
               'Республика Карелия': ['Петрозаводск', '10', 'СЗ'],
               'Республика Коми': ['Сыктывкар', '11', 'СЗ'],
               'Республика Марий Эл': ['Йошкар-Ола', '12', 'Волга'],
               'Республика Мордовия': ['Саранск', '13', 'Волга'],
               'Республика Саха': ['Якутск', '14', 'ДВ'],
               'Республика Северная Осетия - Алания': ['Владикавказ', '15', 'Юг'],
               'Республика Татарстан': ['Казань', '16', 'Волга'],
               'Республика Тыва': ['Кызыл', '17', 'Сибирь'],
               'Республика Хакасия': ['Абакан', '19', 'Сибирь'],
               'Ростовская область': ['Ростов-на-Дону', '61', 'Юг'],
               'Рязанская область': ['Рязань', '62', 'Центр'],
               'Самарская область': ['Самара', '63', 'Волга'],
               'Саратовская область': ['Саратов', '64', 'Волга'],
               'Сахалинская область': ['Южно-Сахалинск', '65', 'ДВ'],
               'Свердловская область': ['Екатеринбург', '66', 'Урал'],
               'Смоленская область': ['Смоленск', '67', 'Центр'],
               'Ставропольский край': ['Ставрополь', '26', 'Юг'],
               'Тамбовская область': ['Тамбов', '68', 'Центр'],
               'Тверская область': ['Тверь', '69', 'Центр'],
               'Томская область': ['Томск', '70', 'Сибирь'],
               'Тульская область': ['Тула', '71', 'Центр'],
               'Тюменская область': ['Тюмень', '72', 'Урал'],
               'Удмуртская республика': ['Ижевск', '18', 'Волга'],
               'Ульяновская область': ['Ульяновск', '73', 'Волга'],
               'Хабаровский край': ['Хабаровск', '27', 'ДВ'],
               'ХМАО': ['Ханты-Мансийск', '86', 'Урал'],
               'Челябинская область': ['Челябинск', '74', 'Урал'],
               'Чувашская Республика': ['Чебоксары', '21', 'Волга'],
               'Чукотский автономный округ': ['Анадырь', '87', 'ДВ'],
               'Ямало-Ненецкий автономный округ': ['Салехард', '89', 'Урал'],
               'Ярославская область': ['Ярославль', '76', 'Центр']}
    return dictmrf


def chck_file_exist(func):
    def inner_func(self, lst):
        header = ['Наименование клиента', 'Дата подключения',
                  'Дата отключения', 'МРФ', 'Город', 'Адрес предоставления услуги',
                  'Количество точек доступа', 'Статус CMS', 'Номер заказа CMS',
                  'Домен', 'МАС']
        if path.exists(self.filename):
            return func(self, lst)
        else:
            wb = oxl.Workbook()
            sheet = wb.active
            for col in range(0, len(header)):
                sheet.cell(row=1, column=self.start_col + col).value = header[col]
            wb.save(self.filename)
            return func(self, lst)

    return inner_func


class Excel():

    def __init__(self, start_col='A'):
        self.date = date.strftime('%d-%m-%Y')
        self.filename = self.date + '.xlsx'
        # self.wb = oxl.load_workbook(self.filename)
        # self.sheet = wb.active
        # self.max_row = self.sheet.max_row
        self.start_col = col_index(start_col)

    @chck_file_exist
    def write_list(self, lst):
        wb = oxl.load_workbook(self.filename)
        sheet = wb.active
        max_row = sheet.max_row + 1
        for col in range(0, len(lst)):
            sheet.cell(row=max_row, column=self.start_col + col).value = lst[col]
        wb.save(self.filename)


class Checkboxes():
    def checkboxklass_choose(self):
        if self.ui.checkboxklass_common.isChecked():
            self.ui.checkboxott_common.setChecked(False)
            self.ui.checkboxott_common.setDisabled(True)
            self.ui.checkboxinterop_common.setChecked(False)
            self.ui.checkboxinterop_common.setDisabled(True)
        else:
            self.ui.checkboxott_common.setChecked(False)
            self.ui.checkboxott_common.setDisabled(False)
            self.ui.checkboxinterop_common.setChecked(False)
            self.ui.checkboxinterop_common.setDisabled(False)
